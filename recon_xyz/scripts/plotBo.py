import numpy as np
import matplotlib.pyplot as plt
from matplotlib.widgets import Slider
from sympy import symbols, sympify, lambdify

# Definir variables simbólicas
x, y, z = symbols('x y z')

# Expresión simbólica completa (copiada de tu mensaje, adaptada con ** en lugar de ^)
expr_str20 = """
-0.0003862456470256456 -0.0003147074670978731*(x**1) + 0.00036737989427977017*(y**1) -0.0007019777426279918*(z**1)
-0.0007710904449281438*(x**2) + 0.001365591591852405*(y**1)*(x**1) -0.00227103250431384*(z**1)*(x**1)
-0.004043554659196369*(y**2) -0.003802323523560608*(z**1)*(y**1) -0.020057609268828568*(z**2)
+ 0.11593994463571465*(x**3) + 0.009637044245279502*(y**1)*(x**2) + 0.09504558675390706*(z**1)*(x**2)
+ 0.12582562494035376*(y**2)*(x**1) -0.004944618775306608*(z**1)*(y**1)*(x**1) + 0.18262224295978324*(z**2)*(x**1)
-0.08479228501715286*(y**3) + 0.014334843764768457*(z**1)*(y**2) -0.13846034199368973*(z**2)*(y**1)
+ 0.07806858210832379*(z**3) + 1.265937518661969*(x**4) + 0.2683864032729619*(y**1)*(x**3)
-0.05497513576164903*(z**1)*(x**3) -0.061595320292555655*(y**2)*(x**2)
-1.8108914292061171*(z**1)*(y**1)*(x**2) -0.64112797794923*(z**2)*(x**2)
+ 0.45253656697086697*(y**3)*(x**1) + 0.23021015052555782*(z**1)*(y**2)*(x**1)
+ 0.5439653867499032*(z**2)*(y**1)*(x**1) -0.045308209115344056*(z**3)*(x**1)
+ 3.8142858310391006*(y**4) + 0.7117872358342137*(z**1)*(y**3) + 3.307131638094278*(z**2)*(y**2)
+ 0.03853113428066379*(z**3)*(y**1) + 3.001200239542933*(z**4) + 2.115750461719119*(x**5)
+ 1.3334610876634598*(y**1)*(x**4) -1.7875267312533913*(z**1)*(x**4)
-21.04446650516565*(y**2)*(x**3) -3.982086040152021*(z**1)*(y**1)*(x**3)
-26.774075287459915*(z**2)*(x**3) + 16.62917932915444*(y**3)*(x**2)
+ 7.25894046425349*(z**1)*(y**2)*(x**2) -8.929247771467502*(z**2)*(y**1)*(x**2)
-22.50810698856857*(z**3)*(x**2) + 4.3139817971991*(y**4)*(x**1)
-8.991163591682437*(z**1)*(y**3)*(x**1) -22.181332970984492*(z**2)*(y**2)*(x**1)
-21.970512136492623*(z**3)*(y**1)*(x**1) -27.12301075093451*(z**4)*(x**1)
+ 36.16533347256402*(y**5) + 17.87495396799674*(z**1)*(y**4) + 26.78424049388916*(z**2)*(y**3)
-14.447388582540336*(z**3)*(y**2) + 40.64530633291636*(z**4)*(y**1) -0.9771013235506176*(z**5)
"""

expr_str = """
-2.387103258077504e-06 -2.9937336402831706e-06*(x**1) + 0.0003655707446096905*(y**1) -0.0003778919287257636*(z**1)
+ 0.000786356096928771*(x**2) + 0.00188468471080176*(y**1)*(x**1) -0.0019409383154357432*(z**1)*(x**1)
+ 0.00967963252785161*(y**2) -0.004499346247436968*(z**1)*(y**1) -0.010223929905185482*(z**2)
+ 0.03170484632227377*(x**3) -0.018269622854377686*(y**1)*(x**2) + 0.03141744604690569*(z**1)*(x**2)
+ 0.04231520824601109*(y**2)*(x**1) -0.0016930193875197425*(z**1)*(y**1)*(x**1) -0.1112788268486248*(z**2)*(x**1)
+ 0.009295511678683824*(y**3) -0.0486147423722409*(z**1)*(y**2) -0.06351265210859117*(z**2)*(y**1)
-0.14277411771754153*(z**3) + 0.11111072398481707*(x**4) -0.21171573558621826*(y**1)*(x**3)
-0.6594745090338394*(z**1)*(x**3) -0.25139469283031524*(y**2)*(x**2) -1.8824695824365563*(z**1)*(y**1)*(x**2)
-0.27533532888898926*(z**2)*(x**2) + 0.12321581715639285*(y**3)*(x**1) + 0.9547591938631812*(z**1)*(y**2)*(x**1)
+ 0.6923213622418749*(z**2)*(y**1)*(x**1) + 0.3401934013624359*(z**3)*(x**1) -1.3290884272774153*(y**4)
+ 1.2897722771329219*(z**1)*(y**3) + 0.5698298584992963*(z**2)*(y**2) + 0.003990368909386227*(z**3)*(y**1)
+ 0.5769570780707753*(z**4) -2.0615717625583025*(x**5) -0.8184913851493261*(y**1)*(x**4)
-7.287654547468972*(z**1)*(x**4) -16.045243309910628*(y**2)*(x**3) -6.96850995881849*(z**1)*(y**1)*(x**3)
-9.348892150785733*(z**2)*(x**3) + 10.427695990801974*(y**3)*(x**2) + 28.387387831292422*(z**1)*(y**2)*(x**2)
+ 2.098786002704185*(z**2)*(y**1)*(x**2) + 5.079030425361981*(z**3)*(x**2) + 7.893796190019882*(y**4)*(x**1)
+ 8.78995987920004*(z**1)*(y**3)*(x**1) + 46.36735879113909*(z**2)*(y**2)*(x**1)
-27.915875411769626*(z**3)*(y**1)*(x**1) + 33.8207807023942*(z**4)*(x**1) -18.99232761413689*(y**5)
+ 19.346752987430975*(z**1)*(y**4) + 31.5352802941785*(z**2)*(y**3) -1.0079863423790782*(z**3)*(y**2)
+ 9.807105418300965*(z**4)*(y**1) + 27.360991573153125*(z**5)
"""

# Parseamos a una expresión simbólica
expr = sympify(expr_str)

# Creamos función numérica
f = lambdify((x, y, z), expr, modules='numpy')

# Rango y grilla
grid = np.linspace(-1, 1, 200)
X, Y = np.meshgrid(grid, grid)

# Valor inicial de Z
z_val = 0.0
Z = f(X, Y, z_val)

# Figura con slider
fig, ax = plt.subplots(figsize=(7, 6))
plt.subplots_adjust(bottom=0.2)

img = ax.imshow(Z, extent=(-1, 1, -1, 1), origin='lower', cmap='viridis')
ax.set_title(f'Corte en z = {z_val:.2f}')
plt.colorbar(img, ax=ax)

# Slider
ax_slider = plt.axes([0.25, 0.05, 0.5, 0.03])
z_slider = Slider(ax_slider, 'z', -1.0, 1.0, valinit=z_val, valstep=0.01)

# Función para actualizar la imagen
def update(val):
    z = z_slider.val
    Z = f(X, Y, z)
    img.set_data(Z)
    ax.set_title(f'Corte en z = {z:.2f}')
    fig.canvas.draw_idle()

z_slider.on_changed(update)

plt.show()